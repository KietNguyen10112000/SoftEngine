#pragma once

#include "TypeDef.h"

#include "Modules/Graphics/GraphicsFundamental.h"

NAMESPACE_DX12_BEGIN

namespace dx12utils
{

inline DXGI_FORMAT ConvertToDX12Format(GRAPHICS_DATA_FORMAT::FORMAT format)
{
	static DXGI_FORMAT MAPPING[GRAPHICS_DATA_FORMAT::COUNT + 1] = {};

	if (MAPPING[GRAPHICS_DATA_FORMAT::COUNT] == 0)
	{
		MAPPING[GRAPHICS_DATA_FORMAT::FORMAT_R32G32B32_FLOAT] = DXGI_FORMAT::DXGI_FORMAT_R32G32B32_FLOAT;
		MAPPING[GRAPHICS_DATA_FORMAT::FORMAT_R8G8B8A8_UNORM] = DXGI_FORMAT::DXGI_FORMAT_R8G8B8A8_UNORM;
		MAPPING[GRAPHICS_DATA_FORMAT::FORMAT_R32G32B32A32_FLOAT] = DXGI_FORMAT::DXGI_FORMAT_R32G32B32A32_FLOAT;

		MAPPING[GRAPHICS_DATA_FORMAT::COUNT] = DXGI_FORMAT::DXGI_FORMAT_FORCE_UINT;
	}

	return MAPPING[format];
}

inline D3D12_PRIMITIVE_TOPOLOGY_TYPE ConvertToDX12PrimitiveTopoplogy(GRAPHICS_PRIMITIVE_TOPOLOGY::TYPE type)
{
	static D3D12_PRIMITIVE_TOPOLOGY_TYPE MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::COUNT + 1] = {};

	if (MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::COUNT] == 0)
	{
		MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::PRIMITIVE_TOPOLOGY_TYPE_LINE] = D3D12_PRIMITIVE_TOPOLOGY_TYPE::D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE;
		MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::PRIMITIVE_TOPOLOGY_TYPE_PATCH] = D3D12_PRIMITIVE_TOPOLOGY_TYPE::D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH;
		MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::PRIMITIVE_TOPOLOGY_TYPE_POINT] = D3D12_PRIMITIVE_TOPOLOGY_TYPE::D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT;
		MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE] = D3D12_PRIMITIVE_TOPOLOGY_TYPE::D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE;
		MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED] = D3D12_PRIMITIVE_TOPOLOGY_TYPE::D3D12_PRIMITIVE_TOPOLOGY_TYPE_UNDEFINED;

		MAPPING[GRAPHICS_PRIMITIVE_TOPOLOGY::COUNT] = (D3D12_PRIMITIVE_TOPOLOGY_TYPE)10;
	}

	return MAPPING[type];
}

inline D3D12_PRIMITIVE_TOPOLOGY ConvertToD3DPrimitiveTopoplogy(D3D12_PRIMITIVE_TOPOLOGY_TYPE type)
{
	static D3D12_PRIMITIVE_TOPOLOGY MAPPING[10] = {};

	if (MAPPING[9] == 0)
	{
		MAPPING[D3D12_PRIMITIVE_TOPOLOGY_TYPE::D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE] = D3D12_PRIMITIVE_TOPOLOGY::D3D_PRIMITIVE_TOPOLOGY_LINELIST;
		MAPPING[D3D12_PRIMITIVE_TOPOLOGY_TYPE::D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE] = D3D12_PRIMITIVE_TOPOLOGY::D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST;

		MAPPING[9] = (D3D12_PRIMITIVE_TOPOLOGY)1;
	}

	return MAPPING[type];
}

inline D3D12_INPUT_ELEMENT_DESC ConvertToDX12InputElement(const GRAPHICS_PIPELINE_INPUT_ELEMENT_DESC& desc)
{
	D3D12_INPUT_ELEMENT_DESC ret = {};

	ret.AlignedByteOffset = desc.alignedByteOffset;
	ret.Format = ConvertToDX12Format(desc.format);
	ret.InputSlot = desc.inputSlot;
	ret.InputSlotClass = (D3D12_INPUT_CLASSIFICATION)desc.inputSlotClass;
	ret.InstanceDataStepRate = desc.instanceDataStepRate;
	ret.SemanticIndex = desc.semanticIndex;
	ret.SemanticName = desc.semanticName;

	return ret;
}

}

NAMESPACE_DX12_END