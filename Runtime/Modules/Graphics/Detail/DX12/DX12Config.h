#pragma once

#include "TypeDef.h"

NAMESPACE_DX12_BEGIN

class DX12_CONFIG
{
public:
	constexpr static size_t			NUM_GRAPHICS_BACK_BUFFERS = 3;
	constexpr static size_t			NUM_GRAPHICS_COMMAND_LIST_ALLOCATORS = 128;
	constexpr static DXGI_FORMAT	BACK_BUFFER_FORMAT = DXGI_FORMAT_R8G8B8A8_UNORM;

	constexpr static size_t			RTV_ALLOCATOR_NUM_RTV_PER_HEAP = 256;
	constexpr static size_t			DSV_ALLOCATOR_NUM_DSV_PER_HEAP = 256;
	constexpr static size_t			DSV_ALLOCATOR_NUM_SRV_PER_HEAP = 4096;

	constexpr static size_t			REGISTER_SPACE_VS = GRAPHICS_SHADER_SPACE::SHADER_SPACE_VS;
	constexpr static size_t			NUM_CBV_VS = GRAPHICS_PARAMS_DESC::NUM_CONSTANT_BUFFER;
	constexpr static size_t			NUM_SRV_VS = GRAPHICS_PARAMS_DESC::NUM_SHADER_RESOURCE;

	constexpr static size_t			REGISTER_SPACE_PS = GRAPHICS_SHADER_SPACE::SHADER_SPACE_PS;
	constexpr static size_t			NUM_CBV_PS = GRAPHICS_PARAMS_DESC::NUM_CONSTANT_BUFFER;
	constexpr static size_t			NUM_SRV_PS = GRAPHICS_PARAMS_DESC::NUM_SHADER_RESOURCE;

	constexpr static size_t			REGISTER_SPACE_GS = GRAPHICS_SHADER_SPACE::SHADER_SPACE_GS;
	constexpr static size_t			NUM_CBV_GS = GRAPHICS_PARAMS_DESC::NUM_CONSTANT_BUFFER;
	constexpr static size_t			NUM_SRV_GS = GRAPHICS_PARAMS_DESC::NUM_SHADER_RESOURCE;

	constexpr static size_t			REGISTER_SPACE_HS = GRAPHICS_SHADER_SPACE::SHADER_SPACE_HS;
	constexpr static size_t			NUM_CBV_HS = GRAPHICS_PARAMS_DESC::NUM_CONSTANT_BUFFER;
	constexpr static size_t			NUM_SRV_HS = GRAPHICS_PARAMS_DESC::NUM_SHADER_RESOURCE;

	constexpr static size_t			REGISTER_SPACE_DS = GRAPHICS_SHADER_SPACE::SHADER_SPACE_DS;
	constexpr static size_t			NUM_CBV_DS = GRAPHICS_PARAMS_DESC::NUM_CONSTANT_BUFFER;
	constexpr static size_t			NUM_SRV_DS = GRAPHICS_PARAMS_DESC::NUM_SHADER_RESOURCE;

	constexpr static size_t			TOTAL_DESCRIPTORS_PER_RENDER_ROOM = +NUM_CBV_VS + NUM_SRV_VS
		+ NUM_CBV_PS + NUM_SRV_PS
		+ NUM_CBV_GS + NUM_SRV_GS
		+ NUM_CBV_HS + NUM_SRV_HS
		+ NUM_CBV_DS + NUM_SRV_DS;
	constexpr static size_t			RENDER_BATCH_SIZE = 48;
	constexpr static size_t			NUM_RENDER_ROOM = RENDER_BATCH_SIZE * NUM_GRAPHICS_COMMAND_LIST_ALLOCATORS;

	constexpr static size_t			TOTAL_DESCRIPTORS_OF_GPU_VISIBLE_HEAP = TOTAL_DESCRIPTORS_PER_RENDER_ROOM * NUM_RENDER_ROOM;


	constexpr static size_t			GRAPHICS_PIPELINE_MIN_RENDER_ROOMS = RENDER_BATCH_SIZE * 3;
	constexpr static size_t			GRAPHICS_PIPELINE_MAX_RENDER_ROOMS = NUM_RENDER_ROOM;

	constexpr static size_t			CBV_MIN_DESCRIPTORS_PER_HEAP = RENDER_BATCH_SIZE * 3;
	constexpr static size_t			CBV_MAX_DESCRIPTORS_PER_HEAP = NUM_RENDER_ROOM;
	
};

NAMESPACE_DX12_END